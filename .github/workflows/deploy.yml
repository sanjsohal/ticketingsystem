name: Build and Deploy to AWS

on:
  push:
    branches:
      - main

env:
  GOOGLE_CREDENTIALS: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
  DATABASE_HOST: ${{ secrets.DB_URL }}
  DATABASE_USERNAME: ${{ secrets.DB_USERNAME }}
  DATABASE_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Get EC2 Public IP
        id: ec2
        run: |
          INSTANCE_ID="${{ secrets.EC2_INSTANCE_ID }}"
          PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids "$INSTANCE_ID" \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)
            echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV


      - name: Upload Artifact to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: target/*.jar
          target: /home/ubuntu/app/deploy/

      - name: Execute deploy script
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/app/deploy/
            java -jar *.jar --spring.profiles.active=dev